// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.1
// Source: rbac.proto

package rbac

import (
	"context"

	"gozero/app/rbac/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = pb.Request
	Response = pb.Response

	Rbac interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultRbac struct {
		cli zrpc.Client
	}
)

func NewRbac(cli zrpc.Client) Rbac {
	return &defaultRbac{
		cli: cli,
	}
}

func (m *defaultRbac) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := pb.NewRbacClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
